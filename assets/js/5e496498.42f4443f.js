"use strict";(self.webpackChunkrifflab_docs=self.webpackChunkrifflab_docs||[]).push([[440],{6805:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>h});var i=n(5893),a=n(1151);const r={sidebar_position:3},o="The Tinkerbell Bootstrap",l={id:"build/getting-airborne/the-tinkerbell-bootstrap",title:"The Tinkerbell Bootstrap",description:"We have a problem.",source:"@site/docs/build/getting-airborne/the-tinkerbell-bootstrap.md",sourceDirName:"build/getting-airborne",slug:"/build/getting-airborne/the-tinkerbell-bootstrap",permalink:"/docs/build/getting-airborne/the-tinkerbell-bootstrap",draft:!1,unlisted:!1,editUrl:"https://github.com/riffcc/rifflabs/tree/main/packages/create-docusaurus/templates/shared/docs/build/getting-airborne/the-tinkerbell-bootstrap.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"buildSidebar",previous:{title:"building-the-base-playbook",permalink:"/docs/build/getting-airborne/building-the-base-playbook"}},s={},h=[{value:"What is Tinkerbell?",id:"what-is-tinkerbell",level:2},{value:"The plan",id:"the-plan",level:2},{value:"Enabling nested virtualization",id:"enabling-nested-virtualization",level:2}];function d(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",img:"img",p:"p",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"the-tinkerbell-bootstrap",children:"The Tinkerbell Bootstrap"}),"\n",(0,i.jsx)(t.p,{children:"We have a problem."}),"\n",(0,i.jsx)(t.p,{children:"We have three or more Proxmox nodes, capable of hosting VMs, but we have only a single VM."}),"\n",(0,i.jsx)(t.p,{children:"We need to be able to create more VMs, and we need to be able to do it quickly and easily."}),"\n",(0,i.jsxs)(t.p,{children:["Enter ",(0,i.jsx)(t.a,{href:"https://tinkerbell.org",children:"Tinkerbell"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"what-is-tinkerbell",children:"What is Tinkerbell?"}),"\n",(0,i.jsx)(t.p,{children:"Tinkerbell is a bare metal machine provisioning system. It allows you to define a machine's configuration in a declarative way, and then provision it with an operating system automatically."}),"\n",(0,i.jsx)(t.h2,{id:"the-plan",children:"The plan"}),"\n",(0,i.jsx)(t.p,{children:"We'll first setup Tinkerbell within a VM, and then use it to provision the rest of our VMs. Later, once all of our VMs have been setup, we'll lay a Kubernetes cluster over the top of them, and then install a permanent Tinkerbell installation on top."}),"\n",(0,i.jsx)(t.p,{children:"Once this is done, interestingly, we'll be able to use Tinkerbell to re-provision and reinstall any machine in the lab, including the machines that are running Tinkerbell itself."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Boots within boots",src:n(7555).Z+"",width:"1024",height:"1024"})}),"\n",(0,i.jsx)(t.h2,{id:"enabling-nested-virtualization",children:"Enabling nested virtualization"}),"\n",(0,i.jsxs)(t.p,{children:["We're going to enable a feature called Nested Virtualisation. If you're building a modern platform (see [TODO: Hardware]) and Proxmox VE, you'll likely already have this enabled. Either way, check out ",(0,i.jsx)(t.a,{href:"https://pve.proxmox.com/wiki/Nested_Virtualization",children:"this guide"}),' for information on how to verify that it\'s available in your environment. In particular, you should go to your VM and check if it has "Host" as the CPU type.']}),"\n",(0,i.jsxs)(t.p,{children:["We'll be using this to run a VM ",(0,i.jsx)(t.em,{children:"inside"})," our VM, which will then run Tinkerbell allowing other machines on the network to be setup and provisioned automatically."]})]})}function c(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7555:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/bootsception-4f2a98b33503737d9f3c88d774d46424.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>o});var i=n(7294);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);